# SPDX-License-Identifier: Apache-2.0
# Copyright Authors of Kerria

MAKEFLAGS += --no-builtin-rules
MAKEFLAGS += --no-builtin-variables

SHELL=/bin/bash

include env_make.mk

SOURCE_DIRS := pkg cmd

VAR_SCRIPT := scripts/make-vars.sh

env_make.mk: $(VAR_SCRIPT) Makefile $(SOURCE_DIRS)
	@echo '# Autogenerated, do not edit' > $@; \
	SOURCE_DIRS="$(SOURCE_DIRS)" source $(VAR_SCRIPT); \
	echo "GEN_FILE_BASE_CONVERSION := $$GEN_FILE_BASE_CONVERSION" >> $@; \
	echo "GEN_FILE_BASE_DEFAULTER := $$GEN_FILE_BASE_DEFAULTER" >> $@; \
	echo "GEN_FILE_BASE_OPENAPI := $$GEN_FILE_BASE_OPENAPI" >> $@; \
	echo "GEN_API_SOURCES := $$GEN_API_SOURCES" >> $@; \
	echo "GEN_OPENAPI := $$GEN_OPENAPI" >> $@; \
	echo "GEN_APIS := $$GEN_APIS" >> $@; \
	echo "GEN_API_META := $$GEN_API_META" >> $@; \
	echo "GEN_API_V1ALPHA1 := $$GEN_API_V1ALPHA1" >> $@; \
	echo "BUILD_SOURCES := $$BUILD_SOURCES" >> $@;

.DEFAULT_GOAL := help

.PHONY: help  ## Display help table
help:
	@## This Makefile uses the `awk` script `scripts/make-help.awk` to generate the `help` output.
	@## Refer to `scripts/make-help.awk` for documentation
	@awk -f scripts/make-help.awk $(MAKEFILE_LIST)

.PHONY: help-%  ## Display extended help for a target (i.e. help-help)
help-%:
	@## Help containing extended descriptions for commands is generated by the script `scripts/make-help-%.sh`.
	@## Refer to `scripts/make-help-%.sh` for documentation
	@awk -f scripts/make-help-%.awk -v request="$@" $(MAKEFILE_LIST)

## Cleanup
.PHONY: clean-generated  ## Delete all autogenerated files
clean-generated:
	GOBIN=$(GOBIN) ./scripts/make-clean-generated.sh


## Tool installation
GO := go
GOBIN_REL := bin
GOBIN := $(shell pwd)/$(GOBIN_REL)

BIN_CODE_GENERATOR_PKG := k8s.io/code-generator
BIN_CODE_GENERATOR_VER := v0.29.2  # Keep in sync with other tool versions (i.e. apimachinery)

BIN_CG_DEFAULTER_GEN := cmd/defaulter-gen
BIN_CG_OPENAPI_GEN := cmd/openapi-gen

BIN_XTOOLS_PKG := golang.org/x/tools
BIN_XTOOLS_VER := v0.21.0

BIN_XTOOLS_GOIMPORTS := cmd/goimports

$(GOBIN_REL)/defaulter-gen:
	GOBIN=$(GOBIN) $(GO) install $(BIN_CODE_GENERATOR_PKG)/$(BIN_CG_DEFAULTER_GEN)@$(BIN_CODE_GENERATOR_VER)

$(GOBIN_REL)/openapi-gen:
	GOBIN=$(GOBIN) $(GO) install $(BIN_CODE_GENERATOR_PKG)/$(BIN_CG_OPENAPI_GEN)@$(BIN_CODE_GENERATOR_VER)

$(GOBIN_REL)/goimports:
	GOBIN=$(GOBIN) $(GO) install $(BIN_XTOOLS_PKG)/$(BIN_XTOOLS_GOIMPORTS)@$(BIN_XTOOLS_VER)

.PHONY: install-tool-all  ## Install all tools required for build
install-tool-all: $(GOBIN_REL)/defaulter-gen $(GOBIN_REL)/openapi-gen $(GOBIN_REL)/goimports


## Codegen
GEN_API_DIRS := $(GEN_API_V1ALPHA1)

GEN_TARGETS_DEFAULTER  := $(addsuffix /$(GEN_FILE_BASE_DEFAULTER).go, $(GEN_API_DIRS))
GEN_TARGETS_OPENAPI    := $(addsuffix /$(GEN_FILE_BASE_OPENAPI).go, $(GEN_OPENAPI))
GEN_TARGETS_ALL := $(GEN_TARGETS_DEFAULTER) $(GEN_TARGETS_OPENAPI)

$(GEN_TARGETS_DEFAULTER): $(GEN_API_SOURCES) $(GOBIN_REL)/defaulter-gen $(GOBIN_REL)/goimports
	GOBIN=$(GOBIN) GO=$(GO) ./scripts/make-generate-defaulter.sh

.PHONY: generate-defaulter  ## (Re)generate code with `defaulter-gen`
generate-defaulter: $(GEN_TARGETS_DEFAULTER)

$(GEN_TARGETS_OPENAPI): $(GEN_API_SOURCES) $(GOBIN_REL)/openapi-gen
	GOBIN=$(GOBIN) GO=$(GO) ./scripts/make-generate-openapi.sh

.PHONY: generate-openapi  ## (Re)generate code with `openapi-gen`
generate-openapi: $(GEN_TARGETS_OPENAPI)

.PHONY: generate-all  ## (Re)generate all codegen code
generate-all: generate-openapi generate-defaulter

## Linting
.PHONY: lint-makefile  ## Lint this Makefile using simple rules
.PHONY: lint-go  ## Lint Go using `golangci-lint`
.PHONY: lint-yaml  ## Lint YAML using `yamllint`
.PHONY: lint-all  ## Lint with all lint targets

## Building
$(GOBIN_REL)/kerria: $(BUILD_SOURCES) $(GEN_TARGETS_ALL)
	GOBIN=$(GOBIN) GO=$(GO) ./scripts/make-build.sh

.PHONY: build  ## Build Kerria CLI
build: $(GOBIN_REL)/kerria
	@## This build target depends on other targets that should rebuild automatically
	@## when the source code is changed. If there was a change to the API code,
	@## API-related codegen should re-execute automatically.

.PHONY: watch-build  ## Watch source code for changes and rebuild
watch-build:
	./scripts/make-watch-build.sh --no-print-directory
